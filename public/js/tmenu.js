/* Generic menu lib

menus can be generated by:

- Right-click on filter/aggregates
- Clicking on "load "

API:

function createMenu(listOfElements, clickCallback)

`listOfElements` is an array of block-level elements. 
Elements that will respond to `clickCallback` must have class `tmenu__item--clickable`.

All menus close on click when clicked element ancestor is not a menu.
*/

var tmenu = (function () {
    var dummyMenuList = [
        $('<div>').text("a menu item").addClass('tmenu__item--clickable'),
        $('<div>').text("another menu item").addClass('tmenu__item--clickable'),
        $('<div>').text("menu item # 3").addClass('tmenu__item--clickable'),
        $('<div>').text("no click here..."),
        $('<div>').text("can I eat a hot dog now??").addClass('tmenu__item--clickable'),
    ]

    function createMenu(clickEvent, listOfElements, clickCallback) {
        // Create a menu at the mouse cursor containing listOfElements.
        // Clickable elements must be tagged with the class 'tmenu__item--clickable'.
        // clickCallback must match the jQuery click() signature: function(event).
        clickEvent.preventDefault();
        var outerContainer = $('<div>').addClass('context');

        var container = $('<div>').addClass('context__background').appendTo(outerContainer);

        listOfElements.forEach(function (el) {
            var element = $(el);
            if (element.hasClass('tmenu__item--clickable')) {
                element.click(clickCallback);
            }
            element.appendTo(container);
        });

        var containerHeight = parseInt(container.css('height'), 10);
        var containerTopPosition = clickEvent.pageY - containerHeight;

        container
            .css({ top: containerTopPosition + 'px', left: clickEvent.pageX + 'px', width: "200px" })
            // .appendTo($(clickEvent.target))
            .show(200);
    }

    return {
        createMenu: createMenu,
        dummyMenuList: dummyMenuList
    };

})()